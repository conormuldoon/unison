/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'jacoco'
}

repositories {
    mavenLocal()
    maven {
        url = uri('http://download.osgeo.org/webdav/geotools')
    }

    maven {
        url = uri('http://www.hibernatespatial.org/repository')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.4.0'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.orbisgis:h2gis:1.5.0'
    implementation 'org.hibernate:hibernate-core:5.4.23.Final'
    implementation 'org.hibernate:hibernate-spatial:5.4.23.Final'
    implementation 'org.locationtech.jts:jts-core:1.16.1'
    implementation 'org.springframework.security:spring-security-web:5.4.1'
    implementation 'org.springframework.security:spring-security-config:5.4.1'
    implementation 'org.springframework.security:spring-security-core:5.4.1'
    implementation 'org.springframework.security:spring-security-test:5.4.1'
    implementation 'org.hibernate:hibernate-c3p0:5.4.23.Final'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'
    runtimeOnly 'org.postgresql:postgresql:42.2.18'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.0'
    testImplementation 'io.projectreactor:reactor-test:3.4.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'
}

group = 'eu.acclimatize'
version = '0.7.0'
description = 'unison-server'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("$buildDir/jacoco")
}

test {
    useJUnitPlatform()
}

